{"uid":"27d7a5e71a7ed808","name":"test_get_not_existing_tourist_404_by_id","fullName":"tests.test_account_login#test_get_not_existing_tourist_404_by_id","historyId":"9a198a4c0a7a326f5a4b531b7c217543","time":{"start":1686647184799,"stop":1686647185402,"duration":603},"description":"Tests correct response, 404 for non-existing tourist_id","descriptionHtml":"<p>Tests correct response, 404 for non-existing tourist_id</p>\n","status":"failed","statusMessage":"AssertionError: assert 404 == 400\n +  where 404 = <Response [404]>.status_code","statusTrace":"def test_get_not_existing_tourist_404_by_id():\n        '''Tests correct response, 404 for non-existing tourist_id'''\n        '''If the requested id is existing_id + 1 zero then the response is 404 without json'''\n        print(f\"Existing tourist_id is {TOURIST_ID}\")\n        request_url = BASE_URL + f\"Tourist/{TOURIST_ID}\" + \"0\"\n        print(f\"Requested URL is: {request_url}\")\n        response = requests.get(request_url)\n        print(f\"Returned status code is {response.status_code}\")\n>       assert response.status_code == 400\nE       assert 404 == 400\nE        +  where 404 = <Response [404]>.status_code\n\ntests/test_account_login.py:93: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1686647182949,"stop":1686647182967,"duration":18},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_xunit_setup_module_fixture_tests.test_account_login","time":{"start":1686647182967,"stop":1686647183593,"duration":626},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Tests correct response, 404 for non-existing tourist_id","status":"failed","statusMessage":"AssertionError: assert 404 == 400\n +  where 404 = <Response [404]>.status_code","statusTrace":"def test_get_not_existing_tourist_404_by_id():\n        '''Tests correct response, 404 for non-existing tourist_id'''\n        '''If the requested id is existing_id + 1 zero then the response is 404 without json'''\n        print(f\"Existing tourist_id is {TOURIST_ID}\")\n        request_url = BASE_URL + f\"Tourist/{TOURIST_ID}\" + \"0\"\n        print(f\"Requested URL is: {request_url}\")\n        response = requests.get(request_url)\n        print(f\"Returned status code is {response.status_code}\")\n>       assert response.status_code == 400\nE       assert 404 == 400\nE        +  where 404 = <Response [404]>.status_code\n\ntests/test_account_login.py:93: AssertionError","steps":[],"attachments":[{"uid":"7aa82ccdd6ec06a","name":"stdout","source":"7aa82ccdd6ec06a.txt","type":"text/plain","size":128}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_module_fixture_tests.test_account_login::0","time":{"start":1686647185432,"stop":1686647185432,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_account_login"},{"name":"host","value":"fv-az339-620"},{"name":"thread","value":"2310-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_account_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"d8cfc16e5d0392cb","reportUrl":"https://dmitriy-karasev.github.io/PyForgeQASchool/9//#testresult/d8cfc16e5d0392cb","status":"passed","time":{"start":1686643498193,"stop":1686643498698,"duration":505}}]},"tags":[]},"source":"27d7a5e71a7ed808.json","parameterValues":[]}